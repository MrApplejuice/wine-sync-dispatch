#!/usr/bin/python3.6

import sys
import struct

import subprocess
import socketserver

class ExecutionHandler(socketserver.BaseRequestHandler):
    def read_int(self):
        to_read = struct.calcsize("i")
        data = self.request.recv(to_read)
        return struct.unpack("i", data)[0]

    def read_string(self):
        str_length = self.read_int()
        return self.request.recv(str_length).decode()

    def handle(self):
        arguments = list(self.read_string() for _ in range(self.read_int()))
        
        for arg in arguments:
            print("ARG", arg)
        print("---------")
        
        process = subprocess.run(arguments,
            shell=True,
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE)
        
        self.request.sendall(b"e" + struct.pack("B", process.returncode))
        self.request.close()
        
if __name__ == "__main__":
    HOST, PORT = "127.0.0.1", 8889

    # Create the server, binding to localhost on port 9999
    with socketserver.ThreadingTCPServer((HOST, PORT), ExecutionHandler) as server:
        # Activate the server; this will keep running until you
        # interrupt the program with Ctrl-C
        server.serve_forever()
